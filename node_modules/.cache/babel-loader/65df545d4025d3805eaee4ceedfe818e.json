{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Dev\\\\React\\\\own_project\\\\weather\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cooiords: {\n        latitude: 0,\n        longitude: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        let newCoords = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        };\n        this.setState({\n          co\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Dev/React/own_project/weather/src/App.js"],"names":["React","App","Component","state","cooiords","latitude","longitude","componentDidMount","navigator","geolocation","getCurrentPosition","position","newCoords","coords","setState","co","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,CADF;AAERC,QAAAA,SAAS,EAAE;AAFH;AADJ,KAFwB;AAAA;;AAShCC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrD,YAAIC,SAAS,GAAG;AACdP,UAAAA,QAAQ,EAAEM,QAAQ,CAACE,MAAT,CAAgBR,QADZ;AAEdC,UAAAA,SAAS,EAAEK,QAAQ,CAACE,MAAT,CAAgBP;AAFb,SAAhB;AAIA,aAAKQ,QAAL,CAAc;AAACC,UAAAA;AAAD,SAAd;AACD,OAND;AAOD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA3B+B;;AA8BlC,eAAef,GAAf","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  state = {\n    cooiords: {\n      latitude: 0,\n      longitude: 0\n    }\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        let newCoords = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        }\n        this.setState({co})\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}