{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Dev\\\\React\\\\own_project\\\\weather\\\\src\\\\App.js\";\nimport React from 'react';\nimport Axios from 'axios';\nimport './App.css';\nimport DisplayWeather from './components/DisplayWeather.js';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      coords: {\n        latitude: 0,\n        longitude: 0\n      },\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        let newCoords = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        };\n        this.setState({\n          coords: newCoords\n        }); // console.log(this.state.coords)\n        //Api Call\n\n        Axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${this.state.coords.latitude}&lon=${this.state.coords.longitude}&appid=d3856252805c106a89495a655d00f5da`).then(res => {\n          let weatherData = {\n            loaction: res.data.name,\n            country: res.data.sys.country,\n            temp: res.data.main.temp,\n            maxTemp: res.data.main.temp_max,\n            main: res.data.weather[0].main,\n            description: res.data.weather[0].description,\n            icon: res.data.weather[0].icon,\n            humidity: res.data.main.humidity,\n            windSpeed: res.data.wind.speed,\n            clouds: res.data.clouds.all,\n            sunrise: res.data.sys.sunrise,\n            sunset: res.data.sys.sunset\n          };\n          this.setState({\n            data: weatherData\n          });\n        });\n      });\n    } else {\n      console.log('Not supported');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(DisplayWeather, {\n        we: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Dev/React/own_project/weather/src/App.js"],"names":["React","Axios","DisplayWeather","App","Component","state","coords","latitude","longitude","data","componentDidMount","navigator","geolocation","getCurrentPosition","position","newCoords","setState","get","then","res","weatherData","loaction","name","country","sys","temp","main","maxTemp","temp_max","weather","description","icon","humidity","windSpeed","wind","speed","clouds","all","sunrise","sunset","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,gCAA3B;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE,CADJ;AAENC,QAAAA,SAAS,EAAE;AAFL,OADF;AAKNC,MAAAA,IAAI,EAAE;AALA,KAFwB;AAAA;;AAUhCC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrD,YAAIC,SAAS,GAAG;AACdR,UAAAA,QAAQ,EAAEO,QAAQ,CAACR,MAAT,CAAgBC,QADZ;AAEdC,UAAAA,SAAS,EAAEM,QAAQ,CAACR,MAAT,CAAgBE;AAFb,SAAhB;AAIA,aAAKQ,QAAL,CAAc;AAAEV,UAAAA,MAAM,EAAES;AAAV,SAAd,EALqD,CAMrD;AACA;;AACAd,QAAAA,KAAK,CAACgB,GAAN,CAAW,sDAAqD,KAAKZ,KAAL,CAAWC,MAAX,CAAkBC,QAAS,QAAO,KAAKF,KAAL,CAAWC,MAAX,CAAkBE,SAAU,yCAA9H,EAAwKU,IAAxK,CAA6KC,GAAG,IAAI;AAClL,cAAIC,WAAW,GAAG;AAChBC,YAAAA,QAAQ,EAAEF,GAAG,CAACV,IAAJ,CAASa,IADH;AAEhBC,YAAAA,OAAO,EAAEJ,GAAG,CAACV,IAAJ,CAASe,GAAT,CAAaD,OAFN;AAGhBE,YAAAA,IAAI,EAAEN,GAAG,CAACV,IAAJ,CAASiB,IAAT,CAAcD,IAHJ;AAIhBE,YAAAA,OAAO,EAAER,GAAG,CAACV,IAAJ,CAASiB,IAAT,CAAcE,QAJP;AAKhBF,YAAAA,IAAI,EAAEP,GAAG,CAACV,IAAJ,CAASoB,OAAT,CAAiB,CAAjB,EAAoBH,IALV;AAMhBI,YAAAA,WAAW,EAAEX,GAAG,CAACV,IAAJ,CAASoB,OAAT,CAAiB,CAAjB,EAAoBC,WANjB;AAOhBC,YAAAA,IAAI,EAAEZ,GAAG,CAACV,IAAJ,CAASoB,OAAT,CAAiB,CAAjB,EAAoBE,IAPV;AAQhBC,YAAAA,QAAQ,EAAEb,GAAG,CAACV,IAAJ,CAASiB,IAAT,CAAcM,QARR;AAShBC,YAAAA,SAAS,EAAEd,GAAG,CAACV,IAAJ,CAASyB,IAAT,CAAcC,KATT;AAUhBC,YAAAA,MAAM,EAAEjB,GAAG,CAACV,IAAJ,CAAS2B,MAAT,CAAgBC,GAVR;AAWhBC,YAAAA,OAAO,EAAEnB,GAAG,CAACV,IAAJ,CAASe,GAAT,CAAac,OAXN;AAYhBC,YAAAA,MAAM,EAAEpB,GAAG,CAACV,IAAJ,CAASe,GAAT,CAAae;AAZL,WAAlB;AAcA,eAAKvB,QAAL,CAAc;AAAEP,YAAAA,IAAI,EAAEW;AAAR,WAAd;AACD,SAhBD;AAiBD,OAzBD;AA0BD,KA3BD,MA4BK;AACHoB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAlD+B;;AAqDlC,eAAevC,GAAf","sourcesContent":["import React from 'react';\nimport Axios from 'axios';\n\nimport './App.css';\nimport DisplayWeather from './components/DisplayWeather.js';\n\nclass App extends React.Component {\n\n  state = {\n    coords: {\n      latitude: 0,\n      longitude: 0\n    },\n    data: {},\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        let newCoords = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        }\n        this.setState({ coords: newCoords })\n        // console.log(this.state.coords)\n        //Api Call\n        Axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${this.state.coords.latitude}&lon=${this.state.coords.longitude}&appid=d3856252805c106a89495a655d00f5da`).then(res => {\n          let weatherData = {\n            loaction: res.data.name,\n            country: res.data.sys.country,\n            temp: res.data.main.temp,\n            maxTemp: res.data.main.temp_max,\n            main: res.data.weather[0].main,\n            description: res.data.weather[0].description,\n            icon: res.data.weather[0].icon,\n            humidity: res.data.main.humidity,\n            windSpeed: res.data.wind.speed,\n            clouds: res.data.clouds.all,\n            sunrise: res.data.sys.sunrise,\n            sunset: res.data.sys.sunset,\n          }\n          this.setState({ data: weatherData });\n        })\n      })\n    }\n    else {\n      console.log('Not supported')\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <DisplayWeather we/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}